[{"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\api.js":"1","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\index.js":"2","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Agenda.js":"3","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Clientes.js":"4","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Pets.js":"5","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Usuarios.js":"6","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartAgendados.js":"7","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\pets\\PetCadastrar.js":"8","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\clientes\\ClientesCadastrar.js":"9","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\servicos\\ServicosCadastrar.js":"10","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Login.js":"11","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\usuarios\\UsuariosCadastrar.js":"12","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartClientes.js":"13","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\usuarios\\UsuariosEditar.js":"14","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\agenda\\AgendaCadastrar.js":"15","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\App.js":"16","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\servicos\\ServicosEditar.js":"17","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\MenuAdmin.js":"18","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\listItems.js":"19","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartAgendaMes.js":"20","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdAgendaMes.js":"21","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdServicos.js":"22","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdAgendados.js":"23","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdClientes.js":"24","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Home.js":"25","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\clientes\\ClientesEditar.js":"26","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Title.js":"27","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartServicos.js":"28","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Servicos.js":"29","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Dashboard.js":"30","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\Routes.js":"31","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdPets.js":"32","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\auth.js":"33","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\wAuth.js":"34","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartPets.js":"35","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\index.js":"36","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Pets.js":"37","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\Routes.js":"38","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Usuarios.js":"39","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\clientes\\ClientesCadastrar.js":"40","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\clientes\\ClientesEditar.js":"41","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\usuarios\\UsuariosEditar.js":"42","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Dashboard.js":"43","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartPets.js":"44","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Agenda.js":"45","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Login.js":"46","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\api.js":"47","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Servicos.js":"48","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Home.js":"49","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\wAuth.js":"50","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\MenuAdmin.js":"51","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartServicos.js":"52","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdAgendados.js":"53","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\listItems.js":"54","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\reportWebVitals.js":"55","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Clientes.js":"56","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\servicos\\ServicosCadastrar.js":"57","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\servicos\\ServicosEditar.js":"58","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\App.js":"59","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\agenda\\AgendaCadastrar.js":"60","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdClientes.js":"61","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\auth.js":"62","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\usuarios\\UsuariosCadastrar.js":"63","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartClientes.js":"64","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartAgendaMes.js":"65","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Title.js":"66","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdAgendaMes.js":"67","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdServicos.js":"68","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\pets\\PetsEditar.js":"69"},{"size":242,"mtime":1616863160340,"results":"70","hashOfConfig":"71"},{"size":449,"mtime":1617320792710,"results":"72","hashOfConfig":"71"},{"size":6246,"mtime":1617325324960,"results":"73","hashOfConfig":"71"},{"size":11600,"mtime":1617328913167,"results":"74","hashOfConfig":"71"},{"size":5070,"mtime":1617326560512,"results":"75","hashOfConfig":"71"},{"size":6716,"mtime":1616705347135,"results":"76","hashOfConfig":"71"},{"size":2201,"mtime":1612228752330,"results":"77","hashOfConfig":"71"},{"size":5165,"mtime":1614898339153,"results":"78","hashOfConfig":"71"},{"size":8722,"mtime":1612647929680,"results":"79","hashOfConfig":"71"},{"size":4047,"mtime":1612585243344,"results":"80","hashOfConfig":"71"},{"size":8529,"mtime":1617316778016,"results":"81","hashOfConfig":"71"},{"size":10691,"mtime":1615242120582,"results":"82","hashOfConfig":"71"},{"size":2301,"mtime":1612228784515,"results":"83","hashOfConfig":"71"},{"size":11468,"mtime":1615242420109,"results":"84","hashOfConfig":"71"},{"size":14636,"mtime":1617238428135,"results":"85","hashOfConfig":"71"},{"size":323,"mtime":1617324302402,"results":"86","hashOfConfig":"71"},{"size":4565,"mtime":1612647112089,"results":"87","hashOfConfig":"71"},{"size":4664,"mtime":1616870783122,"results":"88","hashOfConfig":"71"},{"size":2693,"mtime":1616874281384,"results":"89","hashOfConfig":"71"},{"size":2159,"mtime":1612228787530,"results":"90","hashOfConfig":"71"},{"size":832,"mtime":1612575986338,"results":"91","hashOfConfig":"71"},{"size":840,"mtime":1613090725759,"results":"92","hashOfConfig":"71"},{"size":819,"mtime":1612575970791,"results":"93","hashOfConfig":"71"},{"size":839,"mtime":1612228774050,"results":"94","hashOfConfig":"71"},{"size":1810,"mtime":1616871148760,"results":"95","hashOfConfig":"71"},{"size":9805,"mtime":1612648207483,"results":"96","hashOfConfig":"71"},{"size":359,"mtime":1614204168981,"results":"97","hashOfConfig":"71"},{"size":2296,"mtime":1613091015468,"results":"98","hashOfConfig":"71"},{"size":5951,"mtime":1616705308743,"results":"99","hashOfConfig":"71"},{"size":5712,"mtime":1616763926855,"results":"100","hashOfConfig":"71"},{"size":3258,"mtime":1616874224838,"results":"101","hashOfConfig":"71"},{"size":831,"mtime":1612228769979,"results":"102","hashOfConfig":"71"},{"size":896,"mtime":1616858955742,"results":"103","hashOfConfig":"71"},{"size":1065,"mtime":1616874120670,"results":"104","hashOfConfig":"71"},{"size":2287,"mtime":1613091034463,"results":"105","hashOfConfig":"71"},{"size":449,"mtime":1617320792710,"results":"106","hashOfConfig":"107"},{"size":5070,"mtime":1617326560512,"results":"108","hashOfConfig":"107"},{"size":3279,"mtime":1617925678358,"results":"109","hashOfConfig":"107"},{"size":9681,"mtime":1617932581583,"results":"110","hashOfConfig":"107"},{"size":8722,"mtime":1612647929680,"results":"111","hashOfConfig":"107"},{"size":9804,"mtime":1617661179741,"results":"112","hashOfConfig":"107"},{"size":11529,"mtime":1617661278544,"results":"113","hashOfConfig":"107"},{"size":5712,"mtime":1616763926855,"results":"114","hashOfConfig":"107"},{"size":2287,"mtime":1613091034463,"results":"115","hashOfConfig":"107"},{"size":7802,"mtime":1617927874664,"results":"116","hashOfConfig":"107"},{"size":8700,"mtime":1617659688035,"results":"117","hashOfConfig":"107"},{"size":301,"mtime":1617548013674,"results":"118","hashOfConfig":"107"},{"size":7717,"mtime":1617932110172,"results":"119","hashOfConfig":"107"},{"size":1810,"mtime":1616871148760,"results":"120","hashOfConfig":"107"},{"size":1417,"mtime":1617671813824,"results":"121","hashOfConfig":"107"},{"size":4955,"mtime":1617661135270,"results":"122","hashOfConfig":"107"},{"size":2296,"mtime":1613091015468,"results":"123","hashOfConfig":"107"},{"size":819,"mtime":1612575970791,"results":"124","hashOfConfig":"107"},{"size":2681,"mtime":1617807308812,"results":"125","hashOfConfig":"107"},{"size":362,"mtime":1611698547036,"results":"126","hashOfConfig":"107"},{"size":17084,"mtime":1617931863600,"results":"127","hashOfConfig":"107"},{"size":4931,"mtime":1617664658722,"results":"128","hashOfConfig":"107"},{"size":4840,"mtime":1617661049766,"results":"129","hashOfConfig":"107"},{"size":323,"mtime":1617560873560,"results":"130","hashOfConfig":"107"},{"size":15141,"mtime":1617847497010,"results":"131","hashOfConfig":"107"},{"size":839,"mtime":1612228774050,"results":"132","hashOfConfig":"107"},{"size":934,"mtime":1617826327992,"results":"133","hashOfConfig":"107"},{"size":10692,"mtime":1617661249073,"results":"134","hashOfConfig":"107"},{"size":2301,"mtime":1612228784515,"results":"135","hashOfConfig":"107"},{"size":2159,"mtime":1612228787530,"results":"136","hashOfConfig":"107"},{"size":359,"mtime":1614204168981,"results":"137","hashOfConfig":"107"},{"size":832,"mtime":1612575986338,"results":"138","hashOfConfig":"107"},{"size":840,"mtime":1613090725759,"results":"139","hashOfConfig":"107"},{"size":12518,"mtime":1617925763970,"results":"140","hashOfConfig":"107"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yt2ye2",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"157"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"166"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"157"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"157"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"157"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"157"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"166"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},"17ei2dm",{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"248"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"235"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"267"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"248"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"251"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"248"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\api.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\index.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Agenda.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Clientes.js",["310","311"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Pets.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Usuarios.js",[],["312","313"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartAgendados.js",["314","315","316","317","318","319"],"import React, { PureComponent } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst data = [\r\n    { name: \"Dom\" },\r\n    { name: \"Seg\", qtd: 7 },\r\n    { name: \"Ter\", qtd: 8 },\r\n    { name: \"Qua\", qtd: 10 },\r\n    { name: \"Qui\", qtd: 8 },\r\n    { name: \"Sex\", qtd: 11 },\r\n    { name: \"Sab\", qtd: 5 },\r\n];\r\n\r\nexport default function ChartAgendados() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Agendamentos na Semana</Title>\r\n            <div>\r\n                <LineChart\r\n                    width={270}\r\n                    height={150}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 20,\r\n                        left: -30,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line\r\n                        connectNulls\r\n                        type=\"monotone\"\r\n                        dataKey=\"qtd\"\r\n                        stroke=\"#8884d8\"\r\n                        fill=\"#8884d8\"\r\n                    />\r\n                </LineChart>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n",["320","321"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\pets\\PetCadastrar.js",["322","323","324","325"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function PetCadastrar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Pets\"} />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={8}>\r\n                            <TextField\r\n                                id=\"id_cliente\"\r\n                                name=\"id_cliente\"\r\n                                label=\"Código\"\r\n                                fullWidth\r\n                                disabled\r\n                                autoComplete=\"given-name\"\r\n                            />\r\n                            <TextField\r\n                                id=\"id_pet\"\r\n                                name=\"id_pet\"\r\n                                label=\"Código Pet\"\r\n                                fullWidth\r\n                                disabled\r\n                                autoComplete=\"given-name\"\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"nome\"\r\n                                name=\"nome\"\r\n                                label=\"Nome\"\r\n                                fullWidth\r\n                                autoComplete=\"family-name\"\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"especie\"\r\n                                name=\"especie\"\r\n                                label=\"Espécie\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"raca\"\r\n                                name=\"raca\"\r\n                                label=\"Raça\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"data_nascto\"\r\n                                name=\"data_nascto\"\r\n                                label=\"Data Nascimento\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"peso\"\r\n                                name=\"peso\"\r\n                                label=\"Peso\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"vacinado\"\r\n                                name=\"vacinado\"\r\n                                label=\"Vacinado\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"porte\"\r\n                                name=\"porte\"\r\n                                label=\"Porte\"\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                id=\"sexo\"\r\n                                name=\"sexo\"\r\n                                label=\"Sexo\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Salvar\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                href=\"/Clientes\"\r\n                            >\r\n                                Voltar\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\clientes\\ClientesCadastrar.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\servicos\\ServicosCadastrar.js",["326"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function ServicosCadastrar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [tempo_medio, setTempomedio] = useState(\"\");\r\n     \r\n    async function submitServicos() {\r\n\r\n        const data = {\r\n            descricao:descricao, \r\n            tempo_medio:tempo_medio, \r\n        };\r\n\r\n        const response = await api.post('/servicos', data);\r\n\r\n        if (response.status == 200){\r\n            window.location.href = \"/Servicos\";\r\n        } else {\r\n           alert(\"Ocorreu um erro na inclusão do Serviço. Tente novamente! Erro: \" + response.status);\r\n        }        \r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Cadastrar Serviços\"} />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"descricao\"\r\n                                    name=\"descricao\"\r\n                                    label=\"Descrição\"\r\n                                    fullWidth\r\n                                    autoComplete=\"family-name\"\r\n                                    value={descricao}\r\n                                    onChange={e => setDescricao(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    required\r\n                                    id=\"tempo_medio\"\r\n                                    name=\"tempo_medio\"\r\n                                    label=\"Tempo Médio\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping address-line1\"\r\n                                    value={tempo_medio}\r\n                                    onChange={e => setTempomedio(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={submitServicos}>\r\n                                    Salvar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Servicos\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n",["327","328"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Login.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\usuarios\\UsuariosCadastrar.js",["329"],"import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n//import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function UsuariosCadastrar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.container);\r\n\r\n    const [nome_usuario, setNome] = useState(\"\");\r\n    const [email_usuario, setEmail] = useState(\"\");\r\n    const [cep_usuario, setCep] = useState(\"\");\r\n    const [endereco_usuario, setEndereco] = useState(\"\");\r\n    const [numero_usuario, setNumero] = useState(\"\");\r\n    const [complemento_usuario, setComplemento] = useState(\"\");\r\n    const [bairro_usuario, setBairro] = useState(\"\");\r\n    const [cidade_usuario, setCidade] = useState(\"\");\r\n    const [uf_usuario, setUF] = useState(\"\");\r\n    const [fone_usuario, setFone] = useState(\"\");\r\n    const [senhaAtual_usuario, setSenhaAtual] = useState(\"\");\r\n    //const [senhaNova_usuario, setSenhaNova] = useState(\"\");\r\n    //const [confirmaSenha_usuario, setConfirmaSenha] = useState(\"\");\r\n    const [tip_usuario, setTipoUsuario] = useState(\"\");\r\n\r\n    async function submitUsuario() {\r\n        const data = {\r\n            nome: nome_usuario,\r\n            email: email_usuario,\r\n            cep: cep_usuario,\r\n            endereco: endereco_usuario,\r\n            numero: numero_usuario,\r\n            complemento: complemento_usuario,\r\n            bairro: bairro_usuario,\r\n            cidade: cidade_usuario,\r\n            uf: uf_usuario,\r\n            fone: fone_usuario,\r\n            senha: senhaAtual_usuario,\r\n            tipo_usuario: tip_usuario,\r\n        };\r\n\r\n        const response = await api.post(\"/usuarios\", data);\r\n\r\n        if (response.status == 200) {\r\n            window.location.href = \"/Usuarios\";\r\n        } else {\r\n            alert(\r\n                \"Ocorreu um erro na inclusão do registro. Tente novamente! Erro: \" +\r\n                    response.status\r\n            );\r\n        }\r\n    }\r\n\r\n    const tipos = [\r\n        {\r\n            value: \"A\",\r\n            label: \"Administrador\",\r\n        },\r\n        {\r\n            value: \"U\",\r\n            label: \"Usuário\",\r\n        },\r\n    ];\r\n\r\n    const handleChange = (event) => {\r\n        setTipoUsuario(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Cadastrar Usuário\"} />\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"nome\"\r\n                                    name=\"nome\"\r\n                                    label=\"Nome\"\r\n                                    fullWidth\r\n                                    autoComplete=\"name\"\r\n                                    value={nome_usuario}\r\n                                    onChange={(e) => setNome(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    required\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"E-mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"email\"\r\n                                    value={email_usuario}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cep\"\r\n                                    name=\"cep\"\r\n                                    label=\"Cep\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping\"\r\n                                    value={cep_usuario}\r\n                                    onChange={(e) => setCep(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"endereco\"\r\n                                    name=\"endereco\"\r\n                                    label=\"Endereço\"\r\n                                    fullWidth\r\n                                    value={endereco_usuario}\r\n                                    onChange={(e) =>\r\n                                        setEndereco(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"numero\"\r\n                                    name=\"numero\"\r\n                                    label=\"Número\"\r\n                                    fullWidth\r\n                                    value={numero_usuario}\r\n                                    onChange={(e) => setNumero(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"complemento\"\r\n                                    name=\"complemento\"\r\n                                    label=\"Complemento\"\r\n                                    fullWidth\r\n                                    value={complemento_usuario}\r\n                                    onChange={(e) =>\r\n                                        setComplemento(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"bairro\"\r\n                                    name=\"bairro\"\r\n                                    label=\"Bairro\"\r\n                                    fullWidth\r\n                                    value={bairro_usuario}\r\n                                    onChange={(e) => setBairro(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cidade\"\r\n                                    name=\"cidade\"\r\n                                    label=\"Cidade\"\r\n                                    fullWidth\r\n                                    value={cidade_usuario}\r\n                                    onChange={(e) => setCidade(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"uf\"\r\n                                    name=\"uf\"\r\n                                    label=\"UF\"\r\n                                    fullWidth\r\n                                    value={uf_usuario}\r\n                                    onChange={(e) => setUF(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"fone\"\r\n                                    name=\"fone\"\r\n                                    label=\"Fone\"\r\n                                    fullWidth\r\n                                    value={fone_usuario}\r\n                                    onChange={(e) => setFone(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"senha_atu\"\r\n                                    name=\"senha-Atu\"\r\n                                    label=\"Senha Atual\"\r\n                                    fullWidth\r\n                                    value={senhaAtual_usuario}\r\n                                    onChange={(e) =>\r\n                                        setSenhaAtual(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"tipo_usuario\"\r\n                                    select\r\n                                    label=\"Tipo Usuário\"\r\n                                    value={tip_usuario}\r\n                                    onChange={handleChange}\r\n                                    helperText=\"Selecione o tipo de Usuário.\"\r\n                                >\r\n                                    {tipos.map((option) => (\r\n                                        <MenuItem\r\n                                            key={option.value}\r\n                                            value={option.value}\r\n                                        >\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitUsuario}\r\n                                >\r\n                                    Salvar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Usuarios\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartClientes.js",["330","331","332","333","334","335","336"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\usuarios\\UsuariosEditar.js",["337"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n//import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function UsuariosEditar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.container);\r\n\r\n    const [nome_usuario, setNome] = useState(\"\");\r\n    const [email_usuario, setEmail] = useState(\"\");\r\n    const [cep_usuario, setCep] = useState(\"\");\r\n    const [endereco_usuario, setEndereco] = useState(\"\");\r\n    const [numero_usuario, setNumero] = useState(\"\");\r\n    const [complemento_usuario, setComplemento] = useState(\"\");\r\n    const [bairro_usuario, setBairro] = useState(\"\");\r\n    const [cidade_usuario, setCidade] = useState(\"\");\r\n    const [uf_usuario, setUF] = useState(\"\");\r\n    const [fone_usuario, setFone] = useState(\"\");\r\n    const [senhaAtual_usuario, setSenhaAtual] = useState(\"\");\r\n    //const [senhaNova_usuario, setSenhaNova] = useState(\"\");\r\n    //const [confirmaSenha_usuario, setConfirmaSenha] = useState(\"\");\r\n    const [tip_usuario, setTipoUsuario] = useState(\"\");\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function getUsuario() {\r\n            var response = await api.get(\"/usuarios?id=\" + id);\r\n\r\n            setNome(response.data[0].nome);\r\n            setEmail(response.data[0].email);\r\n            setCep(response.data[0].cep);\r\n            setEndereco(response.data[0].endereco);\r\n            setNumero(response.data[0].numero);\r\n            setComplemento(response.data[0].complemento);\r\n            setBairro(response.data[0].bairro);\r\n            setCidade(response.data[0].cidade);\r\n            setUF(response.data[0].uf);\r\n            setFone(response.data[0].fone);\r\n            setSenhaAtual(response.data[0].senha);\r\n            setTipoUsuario(response.data[0].tipo_usuario);\r\n        }\r\n        getUsuario();\r\n    }, []);\r\n\r\n    async function submitUsuario() {\r\n        const data = {\r\n            nome: nome_usuario,\r\n            email: email_usuario,\r\n            cep: cep_usuario,\r\n            endereco: endereco_usuario,\r\n            numero: numero_usuario,\r\n            complemento: complemento_usuario,\r\n            bairro: bairro_usuario,\r\n            cidade: cidade_usuario,\r\n            uf: uf_usuario,\r\n            fone: fone_usuario,\r\n            senha: senhaAtual_usuario,\r\n            tipo_usuario: tip_usuario,\r\n        };\r\n\r\n        const response = await api.put(\"/usuarios/\" + id, data);\r\n        if (response.status === 200) {\r\n            window.location.href = \"/Usuarios\";\r\n        } else {\r\n            alert(\r\n                \"Ocorreu um erro na atualização do registro. Tente novamente! Erro: \" +\r\n                    response.status\r\n            );\r\n        }\r\n    }\r\n\r\n    const tipos = [\r\n        {\r\n            value: \"A\",\r\n            label: \"Administrador\",\r\n        },\r\n        {\r\n            value: \"U\",\r\n            label: \"Usuário\",\r\n        },\r\n    ];\r\n    \r\n    const handleChange = (event) => {\r\n        setTipoUsuario(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Editar Usuário\"} />\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    id=\"nome\"\r\n                                    name=\"nome\"\r\n                                    label=\"Nome\"\r\n                                    fullWidth\r\n                                    autoComplete=\"name\"\r\n                                    value={nome_usuario}\r\n                                    onChange={(e) => setNome(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"E-mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"email\"\r\n                                    value={email_usuario}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cep\"\r\n                                    name=\"cep\"\r\n                                    label=\"Cep\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping\"\r\n                                    value={cep_usuario}\r\n                                    onChange={(e) => setCep(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"endereco\"\r\n                                    name=\"endereco\"\r\n                                    label=\"Endereço\"\r\n                                    fullWidth\r\n                                    value={endereco_usuario}\r\n                                    onChange={(e) =>\r\n                                        setEndereco(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"numero\"\r\n                                    name=\"numero\"\r\n                                    label=\"Número\"\r\n                                    fullWidth\r\n                                    value={numero_usuario}\r\n                                    onChange={(e) => setNumero(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"complemento\"\r\n                                    name=\"complemento\"\r\n                                    label=\"Complemento\"\r\n                                    fullWidth\r\n                                    value={complemento_usuario}\r\n                                    onChange={(e) =>\r\n                                        setComplemento(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"bairro\"\r\n                                    name=\"bairro\"\r\n                                    label=\"Bairro\"\r\n                                    fullWidth\r\n                                    value={bairro_usuario}\r\n                                    onChange={(e) => setBairro(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cidade\"\r\n                                    name=\"cidade\"\r\n                                    label=\"Cidade\"\r\n                                    fullWidth\r\n                                    value={cidade_usuario}\r\n                                    onChange={(e) => setCidade(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"uf\"\r\n                                    name=\"uf\"\r\n                                    label=\"UF\"\r\n                                    fullWidth\r\n                                    value={uf_usuario}\r\n                                    onChange={(e) => setUF(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"fone\"\r\n                                    name=\"fone\"\r\n                                    label=\"Fone\"\r\n                                    fullWidth\r\n                                    value={fone_usuario}\r\n                                    onChange={(e) => setFone(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"senha_atu\"\r\n                                    name=\"senha-Atu\"\r\n                                    label=\"Senha Atual\"\r\n                                    fullWidth\r\n                                    value={senhaAtual_usuario}\r\n                                    onChange={(e) =>\r\n                                        setSenhaAtual(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"tipo_usuario\"\r\n                                    select\r\n                                    label=\"Tipo Usuário\"\r\n                                    value={tip_usuario}\r\n                                    onChange={handleChange}\r\n                                    helperText=\"Selecione o tipo de Usuário.\"\r\n                                >\r\n                                    {tipos.map((option) => (\r\n                                        <MenuItem\r\n                                            key={option.value}\r\n                                            value={option.value}\r\n                                        >\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitUsuario}\r\n                                >\r\n                                    Salvar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Usuarios\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\agenda\\AgendaCadastrar.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\App.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\servicos\\ServicosEditar.js",["338"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function ServicosEditar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [tempo_medio, setTempomedio] = useState(\"\");\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function getServico() {\r\n            var response = await api.get(\"/servicos?id=\" + id);\r\n\r\n            setDescricao(response.data[0].descricao);\r\n            setTempomedio(response.data[0].tempo_medio);\r\n        }\r\n        getServico();\r\n    }, []);\r\n\r\n    async function submitServico() {\r\n        const data = {\r\n            id: id,\r\n            descricao: descricao,\r\n            tempo_medio: tempo_medio,\r\n        };\r\n\r\n        const response = await api.put('/servicos/' + id, data);\r\n        if (response.status === 200) {\r\n            window.location.href = \"/Servicos\";\r\n        } else {\r\n            alert(\r\n                \"Ocorreu um erro na alteração do Serviço. Tente novamente! Erro: \" +\r\n                    response.status\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Editar Serviços\"} />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    id=\"descricao\"\r\n                                    name=\"descricao\"\r\n                                    label=\"Descrição\"\r\n                                    fullWidth\r\n                                    value={descricao}\r\n                                    onChange={(e) =>\r\n                                        setDescricao(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"tempo_medio\"\r\n                                    name=\"tempo_medio\"\r\n                                    label=\"Tempo Médio\"\r\n                                    fullWidth\r\n                                    value={tempo_medio}\r\n                                    onChange={(e) =>\r\n                                        setTempomedio(e.target.value)\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitServico}\r\n                                >\r\n                                    Salvar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Servicos\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n",["339","340"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\MenuAdmin.js",["341"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { mainListItems, secondaryListItems } from \"./listItems\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getNomeUsuario } from \"../services/auth\";\r\nimport logo from \"../logo.png\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function MenuAdmin({title}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"absolute\"\r\n                className={clsx(classes.appBar, open && classes.appBarShift)}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.menuButtonHidden\r\n                        )}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        noWrap\r\n                        className={classes.title}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    {getNomeUsuario()}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(\r\n                        classes.drawerPaper,\r\n                        !open && classes.drawerPaperClose\r\n                    ),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <img styke={{width:150,heigth:50}} src={logo} alt='Logo do sistema' />\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\listItems.js",["342"],"import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport Schedule from \"@material-ui/icons/Schedule\";\r\nimport PetsIcon from \"@material-ui/icons/Pets\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport RoomService from \"@material-ui/icons/RoomService\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Face from \"@material-ui/icons/Face\";\r\nimport api from \"../services/api\";\r\nimport { getToken, logout } from \"../services/auth\";\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <ListItem button component=\"a\" href=\"/Dashboard\">\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" href=\"/Agenda\">\r\n            <ListItemIcon>\r\n                <Schedule />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Agenda\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" href=\"/Clientes\">\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Clientes\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" href=\"/Pets\">\r\n            <ListItemIcon>\r\n                <PetsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pets\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" href=\"/Servicos\">\r\n            <ListItemIcon>\r\n                <RoomService />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Serviços\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" href=\"/Usuarios\">\r\n            <ListItemIcon>\r\n                <Face />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Usuários\" />\r\n        </ListItem>\r\n        <ListItem button component=\"a\" onClick={confirmaSaida}>\r\n            <ListItemIcon>\r\n                <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sair\" />\r\n        </ListItem>\r\n    </div>\r\n);\r\n\r\nasync function confirmaSaida(){\r\n    if (window.confirm(\"Sair do sistema?\")) {\r\n        const response = await api.get('/destroyToken', {headers: {token: getToken()}});\r\n\r\n        console.log(response);\r\n        if (response.status===200){\r\n            logout();\r\n            window.location.href = '/';\r\n        } else {\r\n            alert('Erro ao encerrar sessão!')\r\n        }\r\n    }\r\n}","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartAgendaMes.js",["343","344","345","346","347","348"],"import React, { PureComponent } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst data = [\r\n    { name: \"Sem 1\", qtd: 49 },\r\n    { name: \"Sem 2\", qtd: 68 },\r\n    { name: \"Sem 3\", qtd: 51 },\r\n    { name: \"Sem 4\", qtd: 60 },\r\n    { name: \"Sem 5\", qtd: 56 },\r\n];\r\n\r\nexport default function ChartAgendados() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Agendamento no Mês</Title>\r\n            <div>\r\n                <LineChart\r\n                    width={270}\r\n                    height={150}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 20,\r\n                        left: -30,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line\r\n                        connectNulls\r\n                        type=\"monotone\"\r\n                        dataKey=\"qtd\"\r\n                        stroke=\"#8884d8\"\r\n                        fill=\"#8884d8\"\r\n                    />\r\n                </LineChart>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n",["349","350"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdAgendaMes.js",["351","352"],"import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default function QtdAgendaMes() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Agendamentos/Mês</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                284\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.depositContext}\r\n            >\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdServicos.js",["353","354"],"import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default function QtdServicos() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Serviços Últimos 6 Meses</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                879\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.depositContext}\r\n            >\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdAgendados.js",["355","356"],"import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default function QtdAgendados() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Agendamentos/Semana</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                49\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.depositContext}\r\n            ></Typography>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdClientes.js",["357","358"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Home.js",[],["359","360"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\clientes\\ClientesEditar.js",["361"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n//import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport MenuAdmin from \"../MenuAdmin\";\r\nimport api from \"../../services/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function ClientesEditar() {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.container);\r\n\r\n    const [nome_cliente, setNome] = useState(\"\");\r\n    const [email_cliente, setEmail] = useState(\"\");\r\n    const [cep_cliente, setCep] = useState(\"\");\r\n    const [endereco_cliente, setEndereco] = useState(\"\");\r\n    const [numero_cliente, setNumero] = useState(\"\");\r\n    const [complemento_cliente, setComplemento] = useState(\"\");\r\n    const [bairro_cliente, setBairro] = useState(\"\");\r\n    const [cidade_cliente, setCidade] = useState(\"\");\r\n    const [uf_cliente, setUF] = useState(\"\");\r\n    const [fone_cliente, setFone] = useState(\"\");\r\n    const [cpf, setCPF] = useState(\"\");\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function getCliente(){\r\n            var response = await api.get('/clientes?id=' + id);\r\n\r\n            setNome(response.data[0].nome)\r\n            setEmail(response.data[0].email)\r\n            setCep(response.data[0].cep)\r\n            setEndereco(response.data[0].endereco)\r\n            setNumero(response.data[0].numero);\r\n            setComplemento(response.data[0].complemento)\r\n            setBairro(response.data[0].bairro)\r\n            setCidade(response.data[0].cidade)\r\n            setUF(response.data[0].uf)\r\n            setFone(response.data[0].fone)\r\n            setCPF(response.data[0].cpf)\r\n        }\r\n        getCliente();\r\n    }, [])\r\n\r\n    async function submitCliente() {\r\n        const data = {\r\n            nome: nome_cliente,\r\n            email: email_cliente,\r\n            cep: cep_cliente,\r\n            endereco: endereco_cliente,\r\n            numero: numero_cliente,\r\n            complemento: complemento_cliente,\r\n            bairro: bairro_cliente,\r\n            cidade: cidade_cliente,\r\n            uf: uf_cliente,\r\n            fone: fone_cliente,\r\n            cpf: cpf,\r\n        };\r\n\r\n        const response = await api.put('/clientes/'+ id, data);\r\n        if (response.status === 200) {\r\n            window.location.href = \"/clientes\";\r\n        } else {\r\n            alert(\r\n                \"Ocorreu um erro na atualização do cliente. Tente novamente! Erro: \" +\r\n                    response.status\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Editar Cliente\"} />\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={8}>\r\n                                <TextField\r\n                                    id=\"nome\"\r\n                                    name=\"nome\"\r\n                                    label=\"Nome\"\r\n                                    fullWidth\r\n                                    autoComplete=\"name\"\r\n                                    value={nome_cliente}\r\n                                    onChange={(e) => setNome(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    label=\"E-mail\"\r\n                                    fullWidth\r\n                                    autoComplete=\"email\"\r\n                                    value={email_cliente}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cep\"\r\n                                    name=\"cep\"\r\n                                    label=\"Cep\"\r\n                                    fullWidth\r\n                                    autoComplete=\"shipping\"\r\n                                    value={cep_cliente}\r\n                                    onChange={(e) => setCep(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"endereco\"\r\n                                    name=\"endereco\"\r\n                                    label=\"Endereço\"\r\n                                    fullWidth\r\n                                    value={endereco_cliente}\r\n                                    onChange={(e) =>\r\n                                        setEndereco(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"numero\"\r\n                                    name=\"numero\"\r\n                                    label=\"Número\"\r\n                                    fullWidth\r\n                                    value={numero_cliente}\r\n                                    onChange={(e) => setNumero(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"complemento\"\r\n                                    name=\"complemento\"\r\n                                    label=\"Complemento\"\r\n                                    fullWidth\r\n                                    value={complemento_cliente}\r\n                                    onChange={(e) =>\r\n                                        setComplemento(e.target.value)\r\n                                    }\r\n                                />\r\n                                <TextField\r\n                                    id=\"bairro\"\r\n                                    name=\"bairro\"\r\n                                    label=\"Bairro\"\r\n                                    fullWidth\r\n                                    value={bairro_cliente}\r\n                                    onChange={(e) => setBairro(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cidade\"\r\n                                    name=\"cidade\"\r\n                                    label=\"Cidade\"\r\n                                    fullWidth\r\n                                    value={cidade_cliente}\r\n                                    onChange={(e) => setCidade(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"uf\"\r\n                                    name=\"uf\"\r\n                                    label=\"UF\"\r\n                                    fullWidth\r\n                                    value={uf_cliente}\r\n                                    onChange={(e) => setUF(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"fone\"\r\n                                    name=\"fone\"\r\n                                    label=\"Fone\"\r\n                                    fullWidth\r\n                                    value={fone_cliente}\r\n                                    onChange={(e) => setFone(e.target.value)}\r\n                                />\r\n                                <TextField\r\n                                    id=\"cpf\"\r\n                                    name=\"cpf\"\r\n                                    label=\"CPF\"\r\n                                    fullWidth\r\n                                    value={cpf}\r\n                                    onChange={(e) =>\r\n                                        setCPF(e.target.value)\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitCliente}\r\n                                >\r\n                                    Salvar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Clientes\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Title.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartServicos.js",["362","363","364","365","366","367","368"],"import React, { PureComponent } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Cell,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n} from \"recharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst data = [\r\n    {\r\n        name: \"Ago\",\r\n        qtd: 59,\r\n        amt: 430,\r\n    },\r\n    {\r\n        name: \"Set\",\r\n        qtd: 78,\r\n        amt: 430,\r\n    },\r\n    {\r\n        name: \"Out\",\r\n        qtd: 67,\r\n        amt: 430,\r\n    },\r\n    {\r\n        name: \"Nov\",\r\n        qtd: 74,\r\n        amt: 430,\r\n    },\r\n    {\r\n        name: \"Dez\",\r\n        qtd: 82,\r\n        amt: 430,\r\n    },\r\n    {\r\n        name: \"Jan\",\r\n        qtd: 70,\r\n        amt: 430,\r\n    },\r\n];\r\n\r\nexport default function ChartServicos() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Serviços Últimos 6 Meses</Title>\r\n            <div>\r\n                <BarChart\r\n                    width={270}\r\n                    height={150}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 20,\r\n                        left: -30,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"qtd\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Servicos.js",[],["369","370"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\Dashboard.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\Routes.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\QtdPets.js",["371","372"],"import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default function QtdPets() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Pets Últimos 6 Meses</Title>\r\n            <Typography component=\"p\" variant=\"h4\">\r\n                323\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                className={classes.depositContext}\r\n            >\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\auth.js",["373"],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\services\\wAuth.js",[],"C:\\Users\\casil\\projetos\\webpet\\frontend\\src\\pages\\dashboard\\ChartPets.js",["374","375","376","377","378","379","380"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\index.js",[],["381","382"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Pets.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\Routes.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Usuarios.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\clientes\\ClientesCadastrar.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\clientes\\ClientesEditar.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\usuarios\\UsuariosEditar.js",[],["383","384"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Dashboard.js",[],["385","386"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartPets.js",["387","388","389","390","391","392","393"],"import React, { PureComponent } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Cell,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n} from \"recharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst data = [\r\n    {\r\n        name: \"Ago\",\r\n        qtd: 35,\r\n        amt: 346,\r\n    },\r\n    {\r\n        name: \"Set\",\r\n        qtd: 5,\r\n        amt: 346,\r\n    },\r\n    {\r\n        name: \"Out\",\r\n        qtd: 48,\r\n        amt: 346,\r\n    },\r\n    {\r\n        name: \"Nov\",\r\n        qtd: 57,\r\n        amt: 346,\r\n    },\r\n    {\r\n        name: \"Dez\",\r\n        qtd: 73,\r\n        amt: 346,\r\n    },\r\n    {\r\n        name: \"Jan\",\r\n        qtd: 105,\r\n        amt: 346,\r\n    },\r\n];\r\n\r\nexport default function ChartPets() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Pets Últimos 6 Meses</Title>\r\n            <div>\r\n                <BarChart\r\n                    width={270}\r\n                    height={150}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 20,\r\n                        left: -30,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"qtd\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Agenda.js",["394"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { lightFormat, format } from \"date-fns\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport MenuAdmin from \"../pages/MenuAdmin\";\r\nimport api from \"../services/api\";\r\nimport { getTipoUsuario } from \"../services/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        maxHeight: 440,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nexport default function Agenda() {\r\n    const classes = useStyles();\r\n    const [agenda, setAgenda] = useState([]);\r\n\r\n    const tip_usuario = getTipoUsuario();\r\n\r\n    useEffect(() => {\r\n        async function carregarAgenda() {\r\n            const response = await api.get(\"/agenda\");\r\n\r\n            setAgenda(response.data);\r\n        }\r\n        carregarAgenda();\r\n    }, []);\r\n\r\n    async function confirmarAgenda(id) {\r\n        const data = {\r\n            confirmado: \"SIM\",\r\n        };\r\n\r\n        if (window.confirm(\"Confirmar o agendamento?\")) {\r\n            var result = await api.put(\"/agenda/\" + id, data);\r\n\r\n            if (result.status === 200) {\r\n                window.location.href = \"/Agenda\";\r\n            } else {\r\n                alert(\r\n                    \"Ocorreu um erro na confirmação do agendamento. Tente novamente!\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    async function deletarAgenda(id) {\r\n        if (window.confirm(\"Confirma a exclusão deste agendamento?\")) {\r\n            var result = await api.delete(\"/agenda/\" + id);\r\n\r\n            if (result.status === 200) {\r\n                window.location.href = \"/Agenda\";\r\n            } else {\r\n                alert(\r\n                    \"Ocorreu um erro na exclusão do agendamento cliente. Tente novamente!\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MenuAdmin title={\"Agenda\"} />\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Table size={\"small\"}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Data</TableCell>\r\n                                        <TableCell>Hora</TableCell>\r\n                                        <TableCell>Cliente</TableCell>\r\n                                        <TableCell>Pet</TableCell>\r\n                                        <TableCell>Funcionário</TableCell>\r\n                                        <TableCell>Confirmado</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {agenda.map((agenda) => (\r\n                                        <TableRow key={agenda.id_cliente}>\r\n                                            <TableCell>\r\n                                                {lightFormat(\r\n                                                    new Date(agenda.data),\r\n                                                    \"dd/MM/yyyy\"\r\n                                                )}\r\n                                            </TableCell>\r\n                                            <TableCell>{agenda.hora}</TableCell>\r\n                                            <TableCell>\r\n                                                {agenda.id_cliente}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {agenda.id_pet}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {agenda.id_usuario}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {agenda.confirmado}\r\n                                            </TableCell>\r\n                                            <ButtonGroup aria-label=\"outlined primary button group\">\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    onClick={() =>\r\n                                                        confirmarAgenda(\r\n                                                            agenda.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    Confirmar\r\n                                                </Button>\r\n                                                <Button\r\n                                                    color=\"secondary\"\r\n                                                    onClick={() =>\r\n                                                        deletarAgenda(agenda.id)\r\n                                                    }\r\n                                                    disabled={\r\n                                                        tip_usuario !== \"A\"\r\n                                                            ? true\r\n                                                            : false\r\n                                                    }\r\n                                                >\r\n                                                    Deletar\r\n                                                </Button>\r\n                                            </ButtonGroup>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    href={\"./agenda/AgendaCadastrar\"}\r\n                                >\r\n                                    Agendar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    href=\"/Home\"\r\n                                >\r\n                                    Voltar\r\n                                </Button>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Login.js",[],["395","396"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\api.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Servicos.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Home.js",[],["397","398"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\wAuth.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\MenuAdmin.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartServicos.js",["399","400","401","402","403","404","405"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdAgendados.js",["406","407"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\listItems.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\reportWebVitals.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Clientes.js",["408"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\servicos\\ServicosCadastrar.js",[],["409","410"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\servicos\\ServicosEditar.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\App.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\agenda\\AgendaCadastrar.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdClientes.js",["411","412"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\services\\auth.js",["413"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\usuarios\\UsuariosCadastrar.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartClientes.js",["414","415","416","417","418","419","420"],"import React, { PureComponent } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Title from \"../Title\";\r\n\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Cell,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n} from \"recharts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: \"flex\",\r\n        overflow: \"auto\",\r\n        flexDirection: \"column\",\r\n    },\r\n}));\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst data = [\r\n    {\r\n        name: \"Ago\",\r\n        qtd: 25,\r\n        amt: 2789,\r\n    },\r\n    {\r\n        name: \"Set\",\r\n        qtd: 5,\r\n        amt: 2789,\r\n    },\r\n    {\r\n        name: \"Out\",\r\n        qtd: 35,\r\n        amt: 2789,\r\n    },\r\n    {\r\n        name: \"Nov\",\r\n        qtd: 45,\r\n        amt: 2789,\r\n    },\r\n    {\r\n        name: \"Dez\",\r\n        qtd: 68,\r\n        amt: 2789,\r\n    },\r\n    {\r\n        name: \"Jan\",\r\n        qtd: 87,\r\n        amt: 2789,\r\n    },\r\n];\r\n\r\nexport default function ChartAgendados() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title>Clientes Últimos 6 Meses</Title>\r\n            <div>\r\n                <BarChart\r\n                    width={270}\r\n                    height={150}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 10,\r\n                        right: 20,\r\n                        left: -30,\r\n                        bottom: 0,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"qtd\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\ChartAgendaMes.js",["421","422","423","424","425","426"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\Title.js",[],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdAgendaMes.js",["427","428"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\dashboard\\QtdServicos.js",["429","430"],"C:\\Users\\casil\\projetos\\tcc_webpet_front\\src\\pages\\pets\\PetsEditar.js",[],{"ruleId":"431","severity":1,"message":"432","line":56,"column":12,"nodeType":"433","messageId":"434","endLine":56,"endColumn":21},{"ruleId":"431","severity":1,"message":"435","line":56,"column":23,"nodeType":"433","messageId":"434","endLine":56,"endColumn":35},{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","replacedBy":"439"},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"443","line":7,"column":65,"nodeType":"433","messageId":"434","endLine":7,"endColumn":71},{"ruleId":"431","severity":1,"message":"444","line":34,"column":10,"nodeType":"433","messageId":"434","endLine":34,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":49,"column":11,"nodeType":"433","messageId":"434","endLine":49,"endColumn":18},{"ruleId":"436","replacedBy":"446"},{"ruleId":"438","replacedBy":"447"},{"ruleId":"431","severity":1,"message":"448","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":13},{"ruleId":"431","severity":1,"message":"449","line":8,"column":8,"nodeType":"433","messageId":"434","endLine":8,"endColumn":24},{"ruleId":"431","severity":1,"message":"450","line":9,"column":8,"nodeType":"433","messageId":"434","endLine":9,"endColumn":16},{"ruleId":"431","severity":1,"message":"451","line":41,"column":11,"nodeType":"433","messageId":"434","endLine":41,"endColumn":27},{"ruleId":"452","severity":1,"message":"453","line":54,"column":29,"nodeType":"454","messageId":"455","endLine":54,"endColumn":31},{"ruleId":"436","replacedBy":"456"},{"ruleId":"438","replacedBy":"457"},{"ruleId":"452","severity":1,"message":"453","line":78,"column":29,"nodeType":"454","messageId":"455","endLine":78,"endColumn":31},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"459","severity":1,"message":"460","line":81,"column":8,"nodeType":"461","endLine":81,"endColumn":10,"suggestions":"462"},{"ruleId":"459","severity":1,"message":"460","line":56,"column":8,"nodeType":"461","endLine":56,"endColumn":10,"suggestions":"463"},{"ruleId":"436","replacedBy":"464"},{"ruleId":"438","replacedBy":"465"},{"ruleId":"431","severity":1,"message":"466","line":4,"column":25,"nodeType":"433","messageId":"434","endLine":4,"endColumn":43},{"ruleId":"431","severity":1,"message":"467","line":5,"column":8,"nodeType":"433","messageId":"434","endLine":5,"endColumn":21},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"443","line":7,"column":65,"nodeType":"433","messageId":"434","endLine":7,"endColumn":71},{"ruleId":"431","severity":1,"message":"444","line":34,"column":10,"nodeType":"433","messageId":"434","endLine":34,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":47,"column":11,"nodeType":"433","messageId":"434","endLine":47,"endColumn":18},{"ruleId":"436","replacedBy":"468"},{"ruleId":"438","replacedBy":"469"},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"436","replacedBy":"470"},{"ruleId":"438","replacedBy":"471"},{"ruleId":"459","severity":1,"message":"460","line":76,"column":8,"nodeType":"461","endLine":76,"endColumn":10,"suggestions":"472"},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"436","replacedBy":"473"},{"ruleId":"438","replacedBy":"474"},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":1,"column":1,"nodeType":"477","endLine":4,"endColumn":3},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"436","replacedBy":"478"},{"ruleId":"438","replacedBy":"479"},{"ruleId":"436","replacedBy":"480"},{"ruleId":"438","replacedBy":"481"},{"ruleId":"436","replacedBy":"482"},{"ruleId":"438","replacedBy":"483"},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"431","severity":1,"message":"484","line":7,"column":23,"nodeType":"433","messageId":"434","endLine":7,"endColumn":29},{"ruleId":"436","replacedBy":"485"},{"ruleId":"438","replacedBy":"486"},{"ruleId":"436","replacedBy":"487"},{"ruleId":"438","replacedBy":"488"},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"431","severity":1,"message":"484","line":19,"column":23,"nodeType":"433","messageId":"434","endLine":19,"endColumn":29},{"ruleId":"436","replacedBy":"489"},{"ruleId":"438","replacedBy":"490"},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"475","severity":1,"message":"476","line":1,"column":1,"nodeType":"477","endLine":4,"endColumn":3},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"458","line":10,"column":5,"nodeType":"433","messageId":"434","endLine":10,"endColumn":9},{"ruleId":"431","severity":1,"message":"443","line":15,"column":5,"nodeType":"433","messageId":"434","endLine":15,"endColumn":11},{"ruleId":"431","severity":1,"message":"444","line":43,"column":10,"nodeType":"433","messageId":"434","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":81,"column":11,"nodeType":"433","messageId":"434","endLine":81,"endColumn":18},{"ruleId":"431","severity":1,"message":"440","line":1,"column":17,"nodeType":"433","messageId":"434","endLine":1,"endColumn":30},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"442","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":18},{"ruleId":"431","severity":1,"message":"443","line":7,"column":65,"nodeType":"433","messageId":"434","endLine":7,"endColumn":71},{"ruleId":"431","severity":1,"message":"444","line":34,"column":10,"nodeType":"433","messageId":"434","endLine":34,"endColumn":24},{"ruleId":"431","severity":1,"message":"445","line":47,"column":11,"nodeType":"433","messageId":"434","endLine":47,"endColumn":18},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},{"ruleId":"431","severity":1,"message":"441","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":12},{"ruleId":"431","severity":1,"message":"444","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":24},"no-unused-vars","'listaPets' is assigned a value but never used.","Identifier","unusedVar","'setlistaPets' is assigned a value but never used.","no-native-reassign",["491"],"no-negated-in-lhs",["492"],"'PureComponent' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'Legend' is defined but never used.","'preventDefault' is defined but never used.","'classes' is assigned a value but never used.",["491"],["492"],"'Paper' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["491"],["492"],"'Cell' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["493"],["494"],["491"],["492"],"'secondaryListItems' is defined but never used.","'ListSubheader' is defined but never used.",["491"],["492"],["491"],["492"],["495"],["491"],["492"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["491"],["492"],["491"],["492"],["491"],["492"],"'format' is defined but never used.",["491"],["492"],["491"],["492"],["491"],["492"],"no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"496","fix":"498"},{"desc":"496","fix":"499"},"Update the dependencies array to be: [id]",{"range":"500","text":"501"},{"range":"502","text":"501"},{"range":"503","text":"501"},[2961,2963],"[id]",[1623,1625],[2616,2618]]